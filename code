from selenium import webdriver as wd
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
import requests
import re
import time
from selenium.webdriver.chrome.options import Options
from bs4 import BeautifulSoup

options = Options()

# chrome을 전체화면으로 넓히는 옵션입니다.
options.add_argument('--start-fullscreen')

#제품 URL 기입
global_url='https://www.currys.co.uk/gbuk/audio-and-headphones/audio/hifi-systems-and-speakers/sony-srs-xb21-portable-bluetooth-wireless-speaker-black-10178872-pdt.html'
driver=wd.Chrome(executable_path = 'chromedriver.exe',chrome_options=options)
driver.get(global_url)
driver.implicitly_wait(10)
driver.find_element_by_xpath("//*[@id='product-tabs']/div[1]/a[3]").click()
try:
    WebDriverWait(driver, 35).until(
        # 지정한 한개 요소가 올라면 웨이트 종료
        EC.presence_of_element_located( (By.CLASS_NAME, 'pagination'))
    )
except Exception as e:
    print( '오류 발생', e)

total_reviews=driver.page_source
ttl_reviewsj=BeautifulSoup(total_reviews,"html.parser")
number_of_reviews=ttl_reviewsj.find("h3",{'class':"filtered-count summary"})
a=number_of_reviews.text.split()
reviews_total=int(a[0])

score_list=[]
date_list=[]
while len(score_list)<=reviews_total:
    
    bsobj=driver.page_source
    bs_obj=BeautifulSoup(bsobj,"html.parser")
    score=bs_obj.findAll('div',{"class":"overall_score_stars"})  
    for i in range(len(score)):
        score_list.append(score[i].text)
        
    Date=bs_obj.findAll('span',{'class':"date date_publish"})
    for j in range(len(Date)):
        date_list.append(Date[j].text.strip())
        
    driver.find_element_by_class_name('next_page').click()
    try:
        WebDriverWait(driver, 35).until(
        # 지정한 한개 요소가 올라면 웨이트 종료
            EC.presence_of_element_located( (By.CLASS_NAME, 'pagination'))
        )
    except Exception as e:
        print( '오류 발생', e)
    time.sleep(3)

driver.close()
driver.quit()


import pandas as pd
score_final=[]
for u in score_list:
    numbers = re.findall("\d+", u)
    score_final.append(numbers[0])
    
a= pd.DataFrame(score_final,columns=['Rating'])
b=pd.DataFrame(date_list,columns=['Date'])

c=pd.concat([a,b],axis=1)

import os

#파일 저장 경로 설정
os.chdir('C:/Users/A48267/Downloads')
#파일 이름 설정
writer=pd.ExcelWriter('xb21_reviews_rating.xlsx',engine='xlsxwriter')
c.to_excel(writer,sheet_name='raw')
writer.save()
